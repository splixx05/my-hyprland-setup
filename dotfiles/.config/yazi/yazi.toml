
[mgr]
ratio = [2, 4, 4]
linemode = "none"
show_hidden = true
show_symlink = true
scrolloff = 5
mouse_events = ["click", "scroll"]
title_format = "Yazi: {cwd}"

[preview]
tab_size = 2
max_width = 600
max_height = 900

[opener]
edit = [{ run = '$EDITOR $@', desc = "$EDITOR", block = true, for = "unix" }]
open = [{ run = 'xdg-open "$1"', desc = "Open", for = "linux" }]
reveal = [
	{ run = 'xdg-open "$(dirname "$1")"', desc = "Reveal", for = "linux" },
]
extract = [
	{ run = 'ya pub extract --list "$@"', desc = "Extract here", for = "unix" },
]
play = [
	{ run = 'vlc --force-window "$@"', orphan = true, for = "unix" },
	{ run = '''mediainfo "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show media info", for = "unix" },
]
image = [
	{ run = 'swaimg "@"', orphan = true, for = "linux", desc = "Open image" },
]

[open]
rules = [
	# Folder
	{ name = "*/", use = [
		"edit",
		"open",
		"reveal",
	] },
	# Text
	{ mime = "text/*", use = [
		"edit",
		"reveal",
	] },
	# Image
	{ mime = "image/*", use = [
		"open",
		"reveal",
	] },
	# Media
	{ mime = "{audio,video}/*", use = [
		"play",
		"reveal",
	] },
	# Archive
	{ mime = "application/{zip,rar,7z*,tar,gzip,xz,zstd,bzip*,lzma,compress,archive,cpio,arj,xar,ms-cab*}", use = [
		"extract",
		"reveal",
	] },
	# JSON
	{ mime = "application/{json,ndjson}", use = [
		"edit",
		"reveal",
	] },
	{ mime = "*/javascript", use = [
		"edit",
		"reveal",
	] },
	# Empty file
	{ mime = "inode/empty", use = [
		"edit",
		"reveal",
	] },
	# Fallback
	{ name = "*", use = [
		"open",
		"reveal",
	] },
]

[tasks]

[plugin]

prepend_fetchers = [
	{ id = "git", name = "*", run = "git" },
	{ id = "git", name = "*/", run = "git" },
]
fetchers = [
	# Mimetype
	{ id = "mime", name = "*", run = "mime", if = "!mime", prio = "high" },
]
spotters = [
	{ name = "*/", run = "folder" },
	# Code
	{ mime = "text/*", run = "code" },
	{ mime = "*/{xml,javascript,wine-extension-ini}", run = "code" },
	# Image
	{ mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
	{ mime = "image/*", run = "image" },
	# Video
	{ mime = "video/*", run = "video" },
	# Fallback
	{ name = "*", run = "file" },
]
preloaders = [
	# Image
	{ mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
	{ mime = "image/*", run = "image" },
	# Video
	{ mime = "video/*", run = "video" },
	# PDF
	{ mime = "application/pdf", run = "pdf" },
	# Font
	{ mime = "font/*", run = "font" },
	{ mime = "application/ms-opentype", run = "font" },
]
previewers = [
	{ name = "*/", run = "folder", sync = true },
	# Code
	{ mime = "text/*", run = "code" },
	{ mime = "*/{xml,javascript,wine-extension-ini}", run = "code" },
	# JSON
	{ mime = "application/{json,ndjson}", run = "json" },
	# Image
	{ mime = "image/{avif,hei?,jxl,svg+xml}", run = "magick" },
	{ mime = "image/*", run = "image" },
	# Video
	{ mime = "video/*", run = "video" },
	# PDF
	{ mime = "application/pdf", run = "pdf" },
	# Archive
	{ mime = "application/{zip,rar,7z*,tar,gzip,xz,zstd,bzip*,lzma,compress,archive,cpio,arj,xar,ms-cab*}", run = "archive" },
	{ mime = "application/{debian*-package,redhat-package-manager,rpm,android.package-archive}", run = "archive" },
	{ name = "*.{AppImage,appimage}", run = "archive" },
	# Virtual Disk / Disk Image
	{ mime = "application/{iso9660-image,qemu-disk,ms-wim,apple-diskimage}", run = "archive" },
	{ mime = "application/virtualbox-{vhd,vhdx}", run = "archive" },
	{ name = "*.{img,fat,ext,ext2,ext3,ext4,squashfs,ntfs,hfs,hfsx}", run = "archive" },
	# Font
	{ mime = "font/*", run = "font" },
	{ mime = "application/ms-opentype", run = "font" },
	# Empty file
	{ mime = "inode/empty", run = "empty" },
	# Fallback
	{ name = "*", run = "file" },
]

[input]

[pick]

[which]
